{"version":3,"sources":["components/app-info/app-info.js","components/search-panel/search-panel.js","components/app-filter/app-filter.js","components/employees-list-item/employees-list-item.js","components/employees-list/employees-list.js","components/employees-add-form/employees-add-form.js","api/employees.js","components/app/app.js","index.js"],"names":["AppInfo","countOfEmployees","employeesWithPremia","className","SearchPanel","onChangeSearch","query","type","placeholder","value","onChange","AppFilter","filterOption","onFilterOption","id","name","label","map","onClick","cn","EmployeesListItem","employee","onDeleteEmployee","onToggleProp","onChangeSalary","salary","increased","liked","increase","like","EmployeesList","React","memo","employees","console","log","e","currentTarget","getAttribute","EmployeesAddForm","onAddEmployee","onSetName","onSetSalary","onSubmit","preventDefault","required","employeesFromServer","App","useState","setEmployees","setName","setSalary","setQuery","appliedQuery","setAppliedQuery","setFilterOption","applyQuery","useCallback","f","delay","timerId","clearTimeout","args","setTimeout","debounce","length","filter","visibleEmployees","useMemo","toLowerCase","includes","trim","target","employeeId","currentEmployees","prop","newEmployee","uuidv4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.829a74b1.chunk.js","sourcesContent":["import \"./app-info.css\";\n\nconst AppInfo = ({\n  countOfEmployees,\n  employeesWithPremia,\n}) => {\n  return (\n    <div className=\"app-info\">\n      <h1>Accounting of employees in the company N</h1>\n\n      <h2>\n        Total number of employees: {countOfEmployees}\n      </h2>\n\n      <h2>\n        The premium will be received: {employeesWithPremia}\n      </h2>\n    </div>\n  );\n};\n\nexport default AppInfo;\n","import './search-panel.css';\n\nconst SearchPanel = ({\n  onChangeSearch,\n  query,\n}) => {\n  return (\n    <input \n      type=\"text\"\n      className=\"form-control search-input\"\n      placeholder=\"Find an employee\"\n      value={query}\n      onChange={onChangeSearch}\n    />\n  );\n};\n\nexport default SearchPanel;\n","import cn from 'classnames';\nimport \"./app-filter.css\";\n\nconst AppFilter = ({\n  filterOption,\n  onFilterOption,\n}) => {\n  const buttonsData = [\n    {id: 1, name: 'all', label: 'All Employees'},\n    {id: 2, name: 'toRise', label: 'To rise'},\n    {id: 3, name: 'salaryMoreThen1000', label: 'Salary mory then $1000'},\n  ]\n\n  return (\n    <div className=\"btn-group\">\n      {\n        buttonsData.map(({id, name, label}) => (\n          <button\n            key={id}\n            type=\"button\"\n            onClick={() => onFilterOption(`${name}`)}\n            className={cn(\"btn\", {\n              'btn-light': filterOption === `${name}`,\n              'btn-outline-light': filterOption !== `${name}`\n            })}\n          >\n            {label}\n          </button>\n        ))\n      }\n    </div>\n  );\n};\n\nexport default AppFilter;\n","import cn from 'classnames';\nimport './employees-list-item.css';\n\nconst EmployeesListItem = ({\n  employee,\n  onDeleteEmployee,\n  onToggleProp,\n  onChangeSalary,\n}) => {\n  const {\n    name,\n    salary,\n    increased,\n    liked\n  } = employee;\n\n  return (\n    <li className={\n      cn(\"list-group-item d-flex justify-content-between\", {\n        increase: increased,\n        like: liked,\n      })\n    }\n    >\n      <span\n        className=\"list-group-item-label\"\n        data-toggle=\"liked\"\n        onClick={onToggleProp}\n      >\n        {name}\n      </span>\n\n      <input\n        type=\"text\"\n        className=\"list-group-item-input\"\n        value={salary}\n        onChange={onChangeSalary}\n      />\n\n      <div className='d-flex justify-content-center align-items-center'>\n        <button \n          type=\"button\"\n          className=\"btn-cookie btn-sm\"\n          data-toggle=\"increased\"\n          onClick={onToggleProp}\n        >\n          <i className=\"fas fa-cookie\"></i>\n        </button>\n\n        <button \n          type=\"button\"\n          className=\"btn-trash btn-sm\"\n          onClick={onDeleteEmployee}\n        >\n          <i className=\"fas fa-trash\"></i>\n        </button>\n\n        <i className=\"fas fa-star\"></i>\n      </div>\n    </li>\n  )\n}\n\nexport default EmployeesListItem;\n","import React from \"react\";\nimport EmployeesListItem from \"../employees-list-item/employees-list-item\";\n\nimport './employees-list.css';\n\nconst EmployeesList = React.memo(({\n  employees,\n  onDeleteEmployee,\n  onToggleProp,\n  onChangeSalary\n}) => {\n  console.log('render')\n  return (\n    <ul className=\"app-list list-group\">\n      {\n        employees.map(employee => (\n          <EmployeesListItem\n            key={employee.id}\n            employee={employee}\n            onDeleteEmployee={() => onDeleteEmployee(employee.id)}\n            onToggleProp={(e) => {\n              onToggleProp(\n                employee.id,\n                e.currentTarget.getAttribute('data-toggle')\n              )\n            }}\n            onChangeSalary={(e) => onChangeSalary(e, employee.id)}\n          />\n        ))\n      }\n    </ul>\n  );\n});\n\nexport default EmployeesList;\n","import './employees-add-form.css';\n\nconst EmployeesAddForm = ({\n  onAddEmployee,\n  onSetName,\n  onSetSalary,\n  salary,\n  name,\n}) => {\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    onAddEmployee();\n  }\n\n  return (\n    <div className=\"app-add-form\">\n      <h3>Add new employee</h3>\n      <form\n        className=\"add-form d-flex\"\n        onSubmit={handleSubmitForm}\n      >\n        <input\n          required\n          type=\"text\"\n          className=\"form-control new-post-label\"\n          placeholder=\"Name ?\"\n          name=\"name\"\n          value={name}\n          onChange={onSetName} \n        />\n        <input\n          required\n          type=\"number\"\n          className=\"form-control new-post-label\"\n          placeholder=\"Salary in $ ?\"\n          name=\"salary\"\n          value={salary}\n          onChange={onSetSalary} \n        />\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-light\"\n        >\n          Add employee\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default EmployeesAddForm;\n","export const employeesFromServer = [\r\n  {id: 1, name: 'Illia', salary: 1200, increased: false, liked: false},\r\n  {id: 2, name: 'Dima', salary: 1000, increased: false, liked: false},\r\n  {id: 3, name: 'Vova', salary: 1500, increased: false, liked: false},\r\n];\r\n","import { useState, useMemo, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport AppInfo from '../app-info/app-info';\nimport SearchPanel from '../search-panel/search-panel';\nimport AppFilter from '../app-filter/app-filter';\nimport EmployeesList from '../employees-list/employees-list';\nimport EmployeesAddForm from '../employees-add-form/employees-add-form';\n\nimport { employeesFromServer } from '../../api/employees';\n\nimport './app.css';\n\nconst debounce = (f, delay) => {\n  let timerId;\n\n  return (...args) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(f, delay, ...args);\n  };\n};\n\nfunction App() {\n  const [employees, setEmployees] = useState(employeesFromServer);\n  const [name, setName] = useState('');\n  const [salary, setSalary] = useState('');\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [filterOption, setFilterOption] = useState('all');\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 500),\n    []\n  );\n\n  const countOfEmployees = employees.length;\n  const employeesWithPremia = employees.filter(employee => employee.liked).length;\n\n  const filterEmployees = () => {\n    const employeesByFilter = employees.filter(employee => {\n      switch (filterOption) {\n        case 'toRise':\n          return employee.liked;\n\n        case 'salaryMoreThen1000':\n          return employee.salary > 1000;\n\n        default:\n          return employee;\n      }\n    });\n\n    return employeesByFilter.filter(\n      employee => (\n        employee.name\n          .toLowerCase()\n          .includes(appliedQuery\n            .trim()\n            .toLowerCase()\n          )\n      ));\n  }\n\n  const visibleEmployees = useMemo(\n    filterEmployees,\n    [appliedQuery, filterOption, employees],\n  );\n\n  const onAddEmployee = () => {\n    const newEmployee = {\n      id: uuidv4(),\n      name: name,\n      salary: salary,\n      increased: false,\n      liked: false,\n    };\n\n    setEmployees(currentEmployees => (\n      [...currentEmployees, newEmployee]\n    ));\n\n    setName('');\n    setSalary('');\n  };\n\n  const onDeleteEmployee = (employeeId) => {\n    setEmployees(currentEmployees => (\n      currentEmployees.filter(employee => employee.id !== employeeId)))\n  };\n\n  const onSetName = (e) => {\n    setName(e.target.value);\n  }\n\n  const onSetSalary = (e) => {\n    setSalary(e.target.value);\n  }\n\n  const onToggleProp = (id, prop) => {\n    setEmployees(currentEmployees => (\n      currentEmployees.map(employee => {\n        if (employee.id === id) {\n          return {\n            ...employee,\n            [prop]: !employee[prop],\n          }\n        }\n\n        return employee;\n      })\n    ));\n  };\n\n  const onChangeSalary = (e, id) => {\n    setEmployees(currentEmployees => (\n      currentEmployees.map(employee => {\n        if (employee.id === id) {\n          return {\n            ...employee,\n            salary: e.target.value,\n          }\n        }\n\n        return employee;\n      })\n    ));\n  };\n\n  const onChangeSearch = (e) => {\n    setQuery(e.target.value);\n    applyQuery(e.target.value);\n  }\n\n  const onFilterOption = (filterOption) => {\n    setFilterOption(filterOption);\n  }\n\n  return (\n    <div className=\"app\">\n      <AppInfo \n        countOfEmployees={countOfEmployees}\n        employeesWithPremia={employeesWithPremia}\n      />\n\n      <div className=\"search-panel\">\n        <SearchPanel\n          onChangeSearch={onChangeSearch}\n          query={query}\n        />\n        <AppFilter\n          filterOption={filterOption}\n          onFilterOption={onFilterOption}\n        />\n      </div>\n      \n      <EmployeesList \n        employees={visibleEmployees}\n        onDeleteEmployee={onDeleteEmployee}\n        onToggleProp={onToggleProp}\n        onChangeSalary={onChangeSalary}\n      />\n      <EmployeesAddForm \n        onAddEmployee={onAddEmployee}\n        onSetName={onSetName}\n        onSetSalary={onSetSalary}\n        name={name}\n        salary={salary}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}